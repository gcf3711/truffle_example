Using network 'develop'.

1
{
  tx: '0x360d6d9dd1824f9915a2a7b3dd5f3c7729e4acfce01ccc02fa6e68dcdd00d6e9',
  receipt: {
    transactionHash: '0x360d6d9dd1824f9915a2a7b3dd5f3c7729e4acfce01ccc02fa6e68dcdd00d6e9',
    transactionIndex: 0,
    blockNumber: 178,
    blockHash: '0xdb5b831a9262fa24e7bffbc1343ba5d2e7ba8c571c508fd7c33944c39f06111a',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
2
{
  tx: '0x9fc43e480e0220017e04f583305b7c6157850dd841f4a8014c2cfa9bfa237e6f',
  receipt: {
    transactionHash: '0x9fc43e480e0220017e04f583305b7c6157850dd841f4a8014c2cfa9bfa237e6f',
    transactionIndex: 0,
    blockNumber: 179,
    blockHash: '0x8c10f6892bb28e1cf2d76d798196c9456395dd5e37380c53e4f27b0f3cd7bdc1',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28521,
    gasUsed: 28521,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
3
{
  transactionHash: '0x11a417e39d8413c4a6f20353027a4d0cab0a7d170cfda78a76b5194cb7de190c',
  transactionIndex: 0,
  blockNumber: 180,
  blockHash: '0xd46f1d10008136f25d47c4e65c3f49b59aa4aece565d7130c6f47d496141127f',
  from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
  to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
  cumulativeGasUsed: 40061,
  gasUsed: 40061,
  contractAddress: null,
  logs: [
    {
      address: '0x4A8BC8e14d6E07943306F2dD3dfCC7979CAF4461',
      blockHash: '0xd46f1d10008136f25d47c4e65c3f49b59aa4aece565d7130c6f47d496141127f',
      blockNumber: 180,
      data: '0x00000000000000000000000000000000000000000000000821ab0d4414980000',
      logIndex: 0,
      removed: false,
      topics: [Array],
      transactionHash: '0x11a417e39d8413c4a6f20353027a4d0cab0a7d170cfda78a76b5194cb7de190c',
      transactionIndex: 0,
      id: 'log_a62e06bf'
    }
  ],
  logsBloom: '0x
  status: true,
  effectiveGasPrice: 2500000008,
  type: '0x2'
}
4
{
  transactionHash: '0x7205dec0df103c9421774372548d2c8118c97a126a839765e9be7ad144d57029',
  transactionIndex: 0,
  blockNumber: 181,
  blockHash: '0x6a7639fd42ab175b4af8682933a8792e167573cfea2d1f872f324ab0ec12018a',
  from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
  to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
  cumulativeGasUsed: 40061,
  gasUsed: 40061,
  contractAddress: null,
  logs: [
    {
      address: '0x4A8BC8e14d6E07943306F2dD3dfCC7979CAF4461',
      blockHash: '0x6a7639fd42ab175b4af8682933a8792e167573cfea2d1f872f324ab0ec12018a',
      blockNumber: 181,
      data: '0x00000000000000000000000000000000000000000000001043561a8829300000',
      logIndex: 0,
      removed: false,
      topics: [Array],
      transactionHash: '0x7205dec0df103c9421774372548d2c8118c97a126a839765e9be7ad144d57029',
      transactionIndex: 0,
      id: 'log_4d38e7b3'
    }
  ],
  logsBloom: '0x
  status: true,
  effectiveGasPrice: 2500000008,
  type: '0x2'
}
5
{
  tx: '0x8d97abf55d7e8888edea89e8c970c796e0d8f5472b339c53abcf69f04e790564',
  receipt: {
    transactionHash: '0x8d97abf55d7e8888edea89e8c970c796e0d8f5472b339c53abcf69f04e790564',
    transactionIndex: 0,
    blockNumber: 182,
    blockHash: '0x58b3365d0bf94e786b7bab8f1160999c229772636a0feffb61c1cb7be213b891',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28521,
    gasUsed: 28521,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
6
{
  tx: '0x00afb4d656d51fef5e6d60612533c486008644eff7e6922c487a194c8772d568',
  receipt: {
    transactionHash: '0x00afb4d656d51fef5e6d60612533c486008644eff7e6922c487a194c8772d568',
    transactionIndex: 0,
    blockNumber: 183,
    blockHash: '0x237c9e44cbe1203585d618c1d65c807353fa2ce089346193063c9b2f840103b2',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28153,
    gasUsed: 28153,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
7
{
  tx: '0x80ec4ad5d36233e6d2d796f1bd20bb53c088d68767979d379b3f08e2ecd7df6a',
  receipt: {
    transactionHash: '0x80ec4ad5d36233e6d2d796f1bd20bb53c088d68767979d379b3f08e2ecd7df6a',
    transactionIndex: 0,
    blockNumber: 184,
    blockHash: '0x614519e20820834246410799b30883f69b7396be5014b6523b28b3296f67cbd2',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="addr", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:65:34)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  reason: 'invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1)',
  code: 'INVALID_ARGUMENT',
  argument: 'addr',
  value: undefined,
  hijackedStack: 'Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="addr", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)\n' +
    '    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:219:1)\n' +
    '    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:228:1)\n' +
    '    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:231:1)\n' +
    '    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n' +
    '    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/address.js:17:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:57:1\n' +
    '    at Array.forEach (<anonymous>)\n' +
    '    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:43:1)\n' +
    '    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:51:16)\n' +
    '    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:86:1)\n' +
    '    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/lib/index.js:127:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:462:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:461:6)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:212:1\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
9
{
  tx: '0x75fb828ecf790d8df5f67d13324b56443763fb81cfeaf4eba944709af3328d3f',
  receipt: {
    transactionHash: '0x75fb828ecf790d8df5f67d13324b56443763fb81cfeaf4eba944709af3328d3f',
    transactionIndex: 0,
    blockNumber: 185,
    blockHash: '0x2f8a1dd5e80900aadeeee0f19bb6fb89de501c1c080db003fc2101e97b61ecbf',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28521,
    gasUsed: 28521,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
10
{
  tx: '0x73f982e3ded0060dd8661708e5d35e7f9e147eeefcdde501d908e1b7c581f115',
  receipt: {
    transactionHash: '0x73f982e3ded0060dd8661708e5d35e7f9e147eeefcdde501d908e1b7c581f115',
    transactionIndex: 0,
    blockNumber: 186,
    blockHash: '0x7667a36f07f28a4b02aa21f92f293570d0d49e66096a4133dff91a984a9bd38c',
    from: '0x63283aa89242d505d2de71b27bfb54e634846967',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="tokenContract", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:89:35)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  reason: 'invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1)',
  code: 'INVALID_ARGUMENT',
  argument: 'tokenContract',
  value: undefined,
  hijackedStack: 'Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="tokenContract", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)\n' +
    '    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:219:1)\n' +
    '    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:228:1)\n' +
    '    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:231:1)\n' +
    '    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n' +
    '    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/address.js:17:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:57:1\n' +
    '    at Array.forEach (<anonymous>)\n' +
    '    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:43:1)\n' +
    '    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:51:16)\n' +
    '    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:86:1)\n' +
    '    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/lib/index.js:127:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:462:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:461:6)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:212:1\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
Error: The send transactions "from" field must be defined!
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:97:35)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  hijackedStack: 'Error: The send transactions "from" field must be defined!\n' +
    '    at Method.inputTransactionFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/lib/formatters.js:177:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:130:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Method.formatInput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:128:1)\n' +
    '    at Method.toPayload (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:161:1)\n' +
    '    at Eth.send [as sendTransaction] (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:506:1)\n' +
    '    at Object.sendTransaction (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:560:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:230:1\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
13
{
  tx: '0x9ead7f95a84050d218127e4948e75963e92efb440632e40b8551b0d5d0a9e7ce',
  receipt: {
    transactionHash: '0x9ead7f95a84050d218127e4948e75963e92efb440632e40b8551b0d5d0a9e7ce',
    transactionIndex: 0,
    blockNumber: 187,
    blockHash: '0x47f2c69415ed00a5154a9b29c3214a279466622cc7aea30386a12e99ee121538',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
14
{
  tx: '0xcdddb2b0b9f64951a0b7d30d027606391fdb23cf0f49f3f8ab282a7113a824e7',
  receipt: {
    transactionHash: '0xcdddb2b0b9f64951a0b7d30d027606391fdb23cf0f49f3f8ab282a7113a824e7',
    transactionIndex: 0,
    blockNumber: 188,
    blockHash: '0x8427f8e705b4875b91b075a4a7f62a7bc14a48507b94655b93a634bf9939ba9b',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000008000000000000000000000000000000000020000000000000020000000000000000000800000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000002000000000000000000000000000000000000000000080000000020200000000000000000000000000000000000000000000000000000000000000000',
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
Error: The send transactions "from" field must be defined!
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:121:35)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  hijackedStack: 'Error: The send transactions "from" field must be defined!\n' +
    '    at Method.inputTransactionFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/lib/formatters.js:177:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:130:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Method.formatInput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:128:1)\n' +
    '    at Method.toPayload (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:161:1)\n' +
    '    at Eth.send [as sendTransaction] (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:506:1)\n' +
    '    at Object.sendTransaction (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:560:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:230:1\n' +
    '    at runMicrotasks (<anonymous>)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
Error: The send transactions "from" field must be defined!
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:129:35)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  hijackedStack: 'Error: The send transactions "from" field must be defined!\n' +
    '    at Method.inputTransactionFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/lib/formatters.js:177:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:130:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Method.formatInput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:128:1)\n' +
    '    at Method.toPayload (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:161:1)\n' +
    '    at Eth.send [as sendTransaction] (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/lib/index.js:506:1)\n' +
    '    at Object.sendTransaction (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:560:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:230:1\n' +
    '    at runMicrotasks (<anonymous>)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
17
{
  tx: '0x6ecb2e2ac90f189cf06b49a29d6afc091c67436654767b0395e626f066bf05d3',
  receipt: {
    transactionHash: '0x6ecb2e2ac90f189cf06b49a29d6afc091c67436654767b0395e626f066bf05d3',
    transactionIndex: 0,
    blockNumber: 189,
    blockHash: '0x5ec17d11b2b3bc81ec4aa6cff3c61343f00dcb92b321c6c50c111fe52769db5c',
    from: '0x4e6de3f1e73b0219ebbdda39b807be71a64e965d',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
18
{
  tx: '0xe44ebcc8c1caa98e6eadc4d37f62dc5073eb4fdaa4da0613016d916134ffbef8',
  receipt: {
    transactionHash: '0xe44ebcc8c1caa98e6eadc4d37f62dc5073eb4fdaa4da0613016d916134ffbef8',
    transactionIndex: 0,
    blockNumber: 190,
    blockHash: '0x7c4b82530437b0a795c7fed35100c2fa7984edf55714cd5e3952d612f3d7a047',
    from: '0xe1514bf54d41c2cf46b1e4d6e70fb67cb5a175be',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28661,
    gasUsed: 28661,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="tokenContract", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:153:35)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  reason: 'invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1)',
  code: 'INVALID_ARGUMENT',
  argument: 'tokenContract',
  value: undefined,
  hijackedStack: 'Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="tokenContract", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)\n' +
    '    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:219:1)\n' +
    '    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:228:1)\n' +
    '    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:231:1)\n' +
    '    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n' +
    '    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/address.js:17:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:57:1\n' +
    '    at Array.forEach (<anonymous>)\n' +
    '    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:43:1)\n' +
    '    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:51:16)\n' +
    '    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:86:1)\n' +
    '    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/lib/index.js:127:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:462:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:461:6)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:212:1\n' +
    '    at runMicrotasks (<anonymous>)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="addr", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)
    at module.exports (/workdir/truffle_example/elysium/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984/EtherGettest.js:161:35)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5) {
  reason: 'invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1)',
  code: 'INVALID_ARGUMENT',
  argument: 'addr',
  value: undefined,
  hijackedStack: 'Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.6.1) (argument="addr", value=undefined, code=INVALID_ARGUMENT, version=abi/5.6.4)\n' +
    '    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:219:1)\n' +
    '    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:228:1)\n' +
    '    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:231:1)\n' +
    '    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n' +
    '    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/address.js:17:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:57:1\n' +
    '    at Array.forEach (<anonymous>)\n' +
    '    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/array.js:43:1)\n' +
    '    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:51:16)\n' +
    '    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:86:1)\n' +
    '    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/lib/index.js:127:1)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:462:1\n' +
    '    at Array.map (<anonymous>)\n' +
    '    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/lib/index.js:461:6)\n' +
    '    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:212:1\n' +
    '    at runMicrotasks (<anonymous>)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
}
21
{
  tx: '0xf91410c46d75c85bed943c3ec2e8fefd91ad9995748b2cfa71d1629b04cfbc65',
  receipt: {
    transactionHash: '0xf91410c46d75c85bed943c3ec2e8fefd91ad9995748b2cfa71d1629b04cfbc65',
    transactionIndex: 0,
    blockNumber: 191,
    blockHash: '0x51d857060e3bebf6c6babf7696785ffed831a73b070298033696e6c12cda24b3',
    from: '0xe1514bf54d41c2cf46b1e4d6e70fb67cb5a175be',
    to: '0x4a8bc8e14d6e07943306f2dd3dfcc7979caf4461',
    cumulativeGasUsed: 28521,
    gasUsed: 28521,
    contractAddress: null,
    logs: [],
    logsBloom: '0x
    status: true,
    effectiveGasPrice: 2500000008,
    type: '0x2',
    rawLogs: [ [Object] ]
  },
  logs: []
}
